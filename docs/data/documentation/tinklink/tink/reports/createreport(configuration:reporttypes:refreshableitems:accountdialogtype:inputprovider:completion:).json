{"abstract":[{"text":"Initializes Tink Link to fetch account and transaction data in one flow.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"createReport","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Configuration","preciseIdentifier":"s:8TinkLink13ConfigurationV","text":"Configuration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reportTypes"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8TinkLink11ReportTypesV","text":"ReportTypes","kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/ReportTypes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"refreshableItems"},{"kind":"text","text":": "},{"text":"RefreshableItems","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/RefreshableItems","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink16RefreshableItemsV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"accountDialogType"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/AccountDialogType","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink17AccountDialogTypeO","text":"AccountDialogType"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inputProvider"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Report","preciseIdentifier":"s:8TinkLink6ReportV","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Report","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink0A5ErrorV","text":"TinkError","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/TinkError"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UINavigationController","text":"UINavigationController"}],"platforms":["iOS"]}]},{"parameters":[{"name":"configuration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The instance of "},{"code":"Configuration","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"reportTypes","content":[{"inlineContent":[{"text":"One or a set of report types that you can fetch in one flow.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The data types to aggregate from the Provider. Multiple items are allowed."}]}],"name":"refreshableItems"},{"content":[{"inlineContent":[{"text":"One of the options (","type":"text"},{"code":".single","type":"codeVoice"},{"type":"text","text":", "},{"code":".multi","type":"codeVoice"},{"text":", ","type":"text"},{"code":".none","type":"codeVoice"},{"text":") which affects whether the end user should be able to select which account to use or not.","type":"text"}],"type":"paragraph"}],"name":"accountDialogType"},{"name":"inputProvider","content":[{"inlineContent":[{"type":"text","text":"The unique name of the provider (eg. "},{"type":"codeVoice","code":"sbab-bankid"},{"text":"). If this is provided, the provider will be chosen for the user. If not, the user can choose the provider in a list. If the given parameter is not a valid provider, the user will see an error screen.","type":"text"}],"type":"paragraph"}]},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The block to execute when the Fetching account and transaction data in one flow finished or if an error occurred."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of "},{"type":"codeVoice","code":"UINavigationController"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"TinkViewController"},{"text":" as a ","type":"text"},{"type":"codeVoice","code":"rootViewController"},{"text":" ready to run the Reports flow.","type":"text"}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hereâ€™s one way you can start fetching account and transaction data in one flow via Tink Link:"},{"text":" ","type":"text"},{"type":"text","text":"First create a configuration with your client ID, redirect URI and base domain."}]},{"type":"codeListing","code":["let configuration = Configuration(clientID: <#String#>, redirectURI: <#String#>, baseDomain: <#BaseDomain#>)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Second, create a market."}],"type":"paragraph"},{"syntax":"swift","code":["let market = Market(<#String#>)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Third, specify a report types, a refreshable items and an account dialog type."}]},{"syntax":"swift","type":"codeListing","code":["let reportTypes: ReportTypes = .accountVereficationReport","let refreshableItems: RefreshableItems = [.checkingAccounts, .identityData]","let accountDialogType: AccountDialogType = .single"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lastly, call "},{"type":"codeVoice","code":"Tink.Reports.createReport"},{"text":" method with at least the configuration, the report types, the refreshable items, the account dialog type and a completion handler. It will initialize and return an instance of ","type":"text"},{"type":"codeVoice","code":"UINavigationController"},{"text":" with ","type":"text"},{"code":"TinkViewController","type":"codeVoice"},{"type":"text","text":" as a "},{"type":"codeVoice","code":"rootViewController"},{"text":". Present the view controller in a preferable way.","type":"text"}]},{"type":"codeListing","code":["let viewController = Tink.Reports.createReport(configuration: configuration, reportTypes: reportTypes, refreshableItems: refreshableItems, accountDialogType: accountDialogType) { result in","    \/\/ Handle result","}","present(viewController, animated: true)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"After the user has completed or canceled the flow, the completion handler will be called with a result.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"On successful authentication the result will contain an instance of "},{"code":"Report","type":"codeVoice"},{"text":" with two optional properties: ","type":"text"},{"type":"codeVoice","code":"accountVerificationReportID"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"transactionReportID"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Both properties will have non-optinal value in case if "},{"code":"reportTypes","type":"codeVoice"},{"text":" parameter has been set to ","type":"text"},{"code":".all","type":"codeVoice"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"Tink.Reports.createReport"},{"text":" method call.","type":"text"},{"type":"text","text":" "},{"text":"And respectively, if ","type":"text"},{"type":"codeVoice","code":"reportTypes"},{"type":"text","text":" was set to "},{"type":"codeVoice","code":".transactionReport"},{"type":"text","text":" only "},{"type":"codeVoice","code":"transactionReportID"},{"type":"text","text":" will have non-optional value and if "},{"code":"reportTypes","type":"codeVoice"},{"text":" was set to ","type":"text"},{"type":"codeVoice","code":".accountVereficationReport"},{"type":"text","text":" only "},{"type":"codeVoice","code":"accountVerificationReportID"},{"type":"text","text":" will have non-optional value."},{"type":"text","text":" "},{"type":"text","text":"If something went wrong the result will contain an error."}]},{"syntax":"swift","code":["switch result {","    case .success(let report):","        \/\/ Handle report.transactionReport and report.accountVerificationReportID after successful connection","    case .failure(let error):","        \/\/ Handle any errors","}"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","metadata":{"roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"createReport","kind":"identifier"},{"kind":"text","text":"("},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8TinkLink13ConfigurationV","kind":"typeIdentifier","text":"Configuration"},{"text":", ","kind":"text"},{"text":"reportTypes","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8TinkLink11ReportTypesV","kind":"typeIdentifier","text":"ReportTypes"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"refreshableItems"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8TinkLink16RefreshableItemsV","text":"RefreshableItems","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"accountDialogType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AccountDialogType","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink17AccountDialogTypeO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inputProvider"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:8TinkLink6ReportV","kind":"typeIdentifier","text":"Report"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:8TinkLink0A5ErrorV","text":"TinkError","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"text":"UINavigationController","preciseIdentifier":"c:objc(cs)UINavigationController","kind":"typeIdentifier"}],"extendedModule":"TinkLink","title":"createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)","externalID":"s:8TinkLink0A0O7ReportsO12createReport13configuration11reportTypes16refreshableItems17accountDialogType13inputProvider10completionSo22UINavigationControllerCAA13ConfigurationV_AA0eH0VAA011RefreshableJ0VAA07AccountlM0OSSSgys6ResultOyAA0E0VAA0A5ErrorVGctFZ","modules":[{"name":"TinkLink"}],"symbolKind":"method","role":"symbol"},"identifier":{"url":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Reports\/createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/TinkLink\/documentation\/TinkLink","doc:\/\/TinkLink\/documentation\/TinkLink\/Tink","doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Reports"]]},"variants":[{"paths":["\/documentation\/tinklink\/tink\/reports\/createreport(configuration:reporttypes:refreshableitems:accountdialogtype:inputprovider:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://TinkLink/documentation/TinkLink/Report":{"abstract":[{"type":"codeVoice","code":"Report"},{"text":" represents the successful result of account and transaction data report in one flow.","type":"text"}],"title":"Report","type":"topic","role":"symbol","navigatorTitle":[{"text":"Report","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Report","url":"\/documentation\/tinklink\/report","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Report"}]},"doc://TinkLink/documentation/TinkLink/TinkError":{"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/TinkError","role":"symbol","title":"TinkError","abstract":[{"type":"text","text":"An error returned by Tink service requests when something went wrong."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TinkError","kind":"identifier"}],"navigatorTitle":[{"text":"TinkError","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/tinklink\/tinkerror"},"doc://TinkLink/documentation/TinkLink/Tink/Reports":{"abstract":[{"text":"Reports product lets you fetch account and transaction data in one flow.","type":"text"}],"title":"Tink.Reports","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Reports","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reports","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reports"}],"url":"\/documentation\/tinklink\/tink\/reports"},"doc://TinkLink/documentation/TinkLink/ReportTypes":{"kind":"symbol","url":"\/documentation\/tinklink\/reporttypes","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReportTypes"}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/ReportTypes","role":"symbol","abstract":[{"code":"ReportTypes","type":"codeVoice"},{"text":" represents the set of report types that you can fetch in one flow.","type":"text"}],"title":"ReportTypes","navigatorTitle":[{"text":"ReportTypes","kind":"identifier"}]},"doc://TinkLink/documentation/TinkLink/RefreshableItems":{"title":"RefreshableItems","url":"\/documentation\/tinklink\/refreshableitems","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RefreshableItems"}],"abstract":[{"type":"text","text":"Represents a set of data types that you can aggregate from a provider."}],"kind":"symbol","navigatorTitle":[{"text":"RefreshableItems","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/RefreshableItems"},"doc://TinkLink/documentation/TinkLink/Configuration":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Configuration","type":"topic","url":"\/documentation\/tinklink\/configuration","title":"Configuration","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Configuration"}],"abstract":[{"text":"Configuration used to set up the Tink Link","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Configuration"}]},"doc://TinkLink/documentation/TinkLink/Tink":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink","url":"\/documentation\/tinklink\/tink","title":"Tink","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tink"}],"abstract":[{"type":"text","text":"The "},{"code":"Tink","type":"codeVoice"},{"type":"text","text":" enum encapsulates a connection to the Tink API."}],"navigatorTitle":[{"kind":"identifier","text":"Tink"}]},"doc://TinkLink/documentation/TinkLink/Tink/Reports/createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)":{"abstract":[{"type":"text","text":"Initializes Tink Link to fetch account and transaction data in one flow."}],"title":"createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Reports\/createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createReport"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink13ConfigurationV"},{"text":", ","kind":"text"},{"text":"reportTypes","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8TinkLink11ReportTypesV","text":"ReportTypes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"refreshableItems"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8TinkLink16RefreshableItemsV","kind":"typeIdentifier","text":"RefreshableItems"},{"kind":"text","text":", "},{"text":"accountDialogType","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8TinkLink17AccountDialogTypeO","kind":"typeIdentifier","text":"AccountDialogType"},{"text":", ","kind":"text"},{"text":"inputProvider","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"text":"Report","preciseIdentifier":"s:8TinkLink6ReportV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink0A5ErrorV","text":"TinkError"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:objc(cs)UINavigationController","kind":"typeIdentifier","text":"UINavigationController"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/tinklink\/tink\/reports\/createreport(configuration:reporttypes:refreshableitems:accountdialogtype:inputprovider:completion:)"},"doc://TinkLink/documentation/TinkLink":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink","title":"TinkLink","type":"topic","url":"\/documentation\/tinklink","role":"collection"},"doc://TinkLink/documentation/TinkLink/AccountDialogType":{"kind":"symbol","url":"\/documentation\/tinklink\/accountdialogtype","title":"AccountDialogType","role":"symbol","navigatorTitle":[{"text":"AccountDialogType","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AccountDialogType"}],"type":"topic","abstract":[{"type":"codeVoice","code":"AccountDialogType"},{"text":" represents the option which affects whether the end user should be able to select which account to use or not.","type":"text"}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/AccountDialogType"}}}