{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"createReport"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Configuration","preciseIdentifier":"s:8TinkLink13ConfigurationV","text":"Configuration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reportTypes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/ReportTypes","preciseIdentifier":"s:8TinkLink11ReportTypesV","text":"ReportTypes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"refreshableItems"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/RefreshableItems","preciseIdentifier":"s:8TinkLink16RefreshableItemsV","text":"RefreshableItems"},{"kind":"text","text":", "},{"kind":"externalParam","text":"accountDialogType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/AccountDialogType","preciseIdentifier":"s:8TinkLink17AccountDialogTypeO","text":"AccountDialogType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inputProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Report","preciseIdentifier":"s:8TinkLink6ReportV","text":"Report"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/TinkError","preciseIdentifier":"s:8TinkLink0A5ErrorV","text":"TinkError"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UINavigationController","preciseIdentifier":"c:objc(cs)UINavigationController"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of "},{"type":"codeVoice","code":"UINavigationController"},{"type":"text","text":" with "},{"type":"codeVoice","code":"TinkViewController"},{"type":"text","text":" as a "},{"type":"codeVoice","code":"rootViewController"},{"type":"text","text":" ready to run the Reports flow."}]}]},{"kind":"parameters","parameters":[{"name":"configuration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The instance of "},{"type":"codeVoice","code":"Configuration"},{"type":"text","text":"."}]}]},{"name":"reportTypes","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"One or a set of report types that you can fetch in one flow."}]}]},{"name":"refreshableItems","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The data types to aggregate from the Provider. Multiple items are allowed."}]}]},{"name":"accountDialogType","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"One of the options ("},{"type":"codeVoice","code":".single"},{"type":"text","text":", "},{"type":"codeVoice","code":".multi"},{"type":"text","text":", "},{"type":"codeVoice","code":".none"},{"type":"text","text":") which affects whether the end user should be able to select which account to use or not."}]}]},{"name":"inputProvider","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The unique name of the provider (eg. "},{"type":"codeVoice","code":"sbab-bankid"},{"type":"text","text":"). If this is provided, the provider will be chosen for the user. If not, the user can choose the provider in a list. If the given parameter is not a valid provider, the user will see an error screen."}]}]},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The block to execute when the Fetching account and transaction data in one flow finished or if an error occurred."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hereâ€™s one way you can start fetching account and transaction data in one flow via Tink Link:"},{"type":"text","text":" "},{"type":"text","text":"First create a configuration with your client ID, redirect URI."}]},{"type":"codeListing","syntax":"swift","code":["let configuration = Configuration(clientID: <#String#>, redirectURI: <#String#>)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Second, create a market."}]},{"type":"codeListing","syntax":"swift","code":["let market = Market(<#String#>)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Third, specify a report types, a refreshable items and an account dialog type."}]},{"type":"codeListing","syntax":"swift","code":["let reportTypes: ReportTypes = .accountVereficationReport","let refreshableItems: RefreshableItems = [.checkingAccounts, .identityData]","let accountDialogType: AccountDialogType = .single"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lastly, call "},{"type":"codeVoice","code":"Tink.Reports.createReport"},{"type":"text","text":" method with at least the configuration, the report types, the refreshable items, the account dialog type and a completion handler. It will initialize and return an instance of "},{"type":"codeVoice","code":"UINavigationController"},{"type":"text","text":" with "},{"type":"codeVoice","code":"TinkViewController"},{"type":"text","text":" as a "},{"type":"codeVoice","code":"rootViewController"},{"type":"text","text":". Present the view controller in a preferable way."}]},{"type":"codeListing","syntax":"swift","code":["let viewController = Tink.Reports.createReport(configuration: configuration, reportTypes: reportTypes, refreshableItems: refreshableItems, accountDialogType: accountDialogType) { result in","    \/\/ Handle result","}","present(viewController, animated: true)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After the user has completed or canceled the flow, the completion handler will be called with a result."},{"type":"text","text":" "},{"type":"text","text":"On successful authentication the result will contain an instance of "},{"type":"codeVoice","code":"Report"},{"type":"text","text":" with two optional properties: "},{"type":"codeVoice","code":"accountVerificationReportID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"transactionReportID"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Both properties will have non-optinal value in case if "},{"type":"codeVoice","code":"reportTypes"},{"type":"text","text":" parameter has been set to "},{"type":"codeVoice","code":".all"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"Tink.Reports.createReport"},{"type":"text","text":" method call."},{"type":"text","text":" "},{"type":"text","text":"And respectively, if "},{"type":"codeVoice","code":"reportTypes"},{"type":"text","text":" was set to "},{"type":"codeVoice","code":".transactionReport"},{"type":"text","text":" only "},{"type":"codeVoice","code":"transactionReportID"},{"type":"text","text":" will have non-optional value and if "},{"type":"codeVoice","code":"reportTypes"},{"type":"text","text":" was set to "},{"type":"codeVoice","code":".accountVereficationReport"},{"type":"text","text":" only "},{"type":"codeVoice","code":"accountVerificationReportID"},{"type":"text","text":" will have non-optional value."},{"type":"text","text":" "},{"type":"text","text":"If something went wrong the result will contain an error."}]},{"type":"codeListing","syntax":"swift","code":["switch result {","    case .success(let report):","        \/\/ Handle report.transactionReport and report.accountVerificationReportID after successful connection","    case .failure(let error):","        \/\/ Handle any errors","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/tinklink\/tink\/reports\/createreport(configuration:reporttypes:refreshableitems:accountdialogtype:inputprovider:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Reports\/createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initializes Tink Link to fetch account and transaction data in one flow."}],"kind":"symbol","metadata":{"role":"symbol","title":"createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"createReport"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:8TinkLink13ConfigurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reportTypes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ReportTypes","preciseIdentifier":"s:8TinkLink11ReportTypesV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"refreshableItems"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RefreshableItems","preciseIdentifier":"s:8TinkLink16RefreshableItemsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"accountDialogType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AccountDialogType","preciseIdentifier":"s:8TinkLink17AccountDialogTypeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inputProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Report","preciseIdentifier":"s:8TinkLink6ReportV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TinkError","preciseIdentifier":"s:8TinkLink0A5ErrorV"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UINavigationController","preciseIdentifier":"c:objc(cs)UINavigationController"}],"symbolKind":"method","externalID":"s:8TinkLink0A0O7ReportsO12createReport13configuration11reportTypes16refreshableItems17accountDialogType13inputProvider10completionSo22UINavigationControllerCAA13ConfigurationV_AA0eH0VAA011RefreshableJ0VAA07AccountlM0OSSSgys6ResultOyAA0E0VAA0A5ErrorVGctFZ","extendedModule":"TinkLink","modules":[{"name":"TinkLink"}]},"hierarchy":{"paths":[["doc:\/\/TinkLink\/documentation\/TinkLink","doc:\/\/TinkLink\/documentation\/TinkLink\/Tink","doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Reports"]]},"references":{"doc://TinkLink/documentation/TinkLink/Report":{"role":"symbol","title":"Report","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Report"}],"abstract":[{"type":"codeVoice","code":"Report"},{"type":"text","text":" represents the successful result of account and transaction data report in one flow."}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Report","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Report"}],"url":"\/documentation\/tinklink\/report"},"doc://TinkLink/documentation/TinkLink/RefreshableItems":{"role":"symbol","title":"RefreshableItems","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefreshableItems"}],"abstract":[{"type":"text","text":"Represents a set of data types that you can aggregate from a provider."}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/RefreshableItems","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RefreshableItems"}],"url":"\/documentation\/tinklink\/refreshableitems"},"doc://TinkLink/documentation/TinkLink/Configuration":{"role":"symbol","title":"Configuration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"abstract":[{"type":"text","text":"Configuration used to set up the Tink Link"}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Configuration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Configuration"}],"url":"\/documentation\/tinklink\/configuration"},"doc://TinkLink/documentation/TinkLink/ReportTypes":{"role":"symbol","title":"ReportTypes","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReportTypes"}],"abstract":[{"type":"codeVoice","code":"ReportTypes"},{"type":"text","text":" represents the set of report types that you can fetch in one flow."}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/ReportTypes","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReportTypes"}],"url":"\/documentation\/tinklink\/reporttypes"},"doc://TinkLink/documentation/TinkLink/TinkError":{"role":"symbol","title":"TinkError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TinkError"}],"abstract":[{"type":"text","text":"An error returned by Tink service requests when something went wrong."}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/TinkError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TinkError"}],"url":"\/documentation\/tinklink\/tinkerror"},"doc://TinkLink/documentation/TinkLink/Tink/Reports":{"role":"symbol","title":"Tink.Reports","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reports"}],"abstract":[{"type":"text","text":"Reports product lets you fetch account and transaction data in one flow."}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Reports","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reports"}],"url":"\/documentation\/tinklink\/tink\/reports"},"doc://TinkLink/documentation/TinkLink/Tink":{"role":"symbol","title":"Tink","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tink"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Tink"},{"type":"text","text":" enum encapsulates a connection to the Tink API."}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Tink"}],"url":"\/documentation\/tinklink\/tink"},"doc://TinkLink/documentation/TinkLink/Tink/Reports/createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)":{"role":"symbol","title":"createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"createReport"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:8TinkLink13ConfigurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reportTypes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ReportTypes","preciseIdentifier":"s:8TinkLink11ReportTypesV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"refreshableItems"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RefreshableItems","preciseIdentifier":"s:8TinkLink16RefreshableItemsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"accountDialogType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AccountDialogType","preciseIdentifier":"s:8TinkLink17AccountDialogTypeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inputProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Report","preciseIdentifier":"s:8TinkLink6ReportV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TinkError","preciseIdentifier":"s:8TinkLink0A5ErrorV"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UINavigationController","preciseIdentifier":"c:objc(cs)UINavigationController"}],"abstract":[{"type":"text","text":"Initializes Tink Link to fetch account and transaction data in one flow."}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Reports\/createReport(configuration:reportTypes:refreshableItems:accountDialogType:inputProvider:completion:)","kind":"symbol","type":"topic","url":"\/documentation\/tinklink\/tink\/reports\/createreport(configuration:reporttypes:refreshableitems:accountdialogtype:inputprovider:completion:)"},"doc://TinkLink/documentation/TinkLink":{"role":"collection","title":"TinkLink","abstract":[],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink","kind":"symbol","type":"topic","url":"\/documentation\/tinklink"},"doc://TinkLink/documentation/TinkLink/AccountDialogType":{"role":"symbol","title":"AccountDialogType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccountDialogType"}],"abstract":[{"type":"codeVoice","code":"AccountDialogType"},{"type":"text","text":" represents the option which affects whether the end user should be able to select which account to use or not."}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/AccountDialogType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccountDialogType"}],"url":"\/documentation\/tinklink\/accountdialogtype"}}}