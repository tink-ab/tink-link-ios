{"variants":[{"paths":["\/documentation\/tinklink\/tink\/transactions\/updateconsent(configuration:authorizationcode:credentialsid:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Initializes Tink Link to run Transactions Update consent flow.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/TinkLink\/documentation\/TinkLink","doc:\/\/TinkLink\/documentation\/TinkLink\/Tink","doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Transactions"]]},"identifier":{"url":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Transactions\/updateConsent(configuration:authorizationCode:credentialsID:completion:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"updateConsent","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Configuration","text":"Configuration","preciseIdentifier":"s:8TinkLink13ConfigurationV"},{"kind":"text","text":", "},{"text":"authorizationCode","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/AuthorizationCode","preciseIdentifier":"s:8TinkLink17AuthorizationCodeV","text":"AuthorizationCode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"credentialsID"},{"text":": ","kind":"text"},{"text":"Credentials","preciseIdentifier":"s:8TinkLink11CredentialsV","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"ID","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials\/ID-swift.typealias","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV2IDa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Credentials","kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials","preciseIdentifier":"s:8TinkLink11CredentialsV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV2IDa","text":"ID","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials\/ID-swift.typealias"},{"kind":"text","text":", "},{"preciseIdentifier":"s:8TinkLink0A5ErrorV","kind":"typeIdentifier","text":"TinkError","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/TinkError"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:objc(cs)UINavigationController","text":"UINavigationController","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"configuration","content":[{"inlineContent":[{"text":"The instance of ","type":"text"},{"code":"Configuration","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"authorizationCode","content":[{"type":"paragraph","inlineContent":[{"text":"The authorization code retrieved from the authorization delegate endpoint generated for a concrete permanent user.","type":"text"}]}]},{"name":"credentialsID","content":[{"inlineContent":[{"type":"text","text":"The ID of the "},{"code":"Credentials.ID","type":"codeVoice"},{"type":"text","text":" used to extend the consent."}],"type":"paragraph"}]},{"name":"completion","content":[{"inlineContent":[{"type":"text","text":"The block to execute when the Update consent flow finished or if an error occurred."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of "},{"type":"codeVoice","code":"UINavigationController"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"TinkViewController"},{"text":" as a ","type":"text"},{"type":"codeVoice","code":"rootViewController"},{"text":" ready to run the Update Consent flow.","type":"text"}]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"Hereâ€™s one way you can start the Update consent flow via Tink Link:","type":"text"},{"type":"text","text":" "},{"text":"First create a configuration with your client ID, redirect URI and base domain.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let configuration = Configuration(clientID: <#String#>, redirectURI: <#String#>, baseDomain: <#BaseDomain#>)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Second, retrieve an authorization code from the authorization delegate endpoint generated for a concrete permanent user."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Third, define a credentials ID which is connected to the consent you want to update."}]},{"type":"paragraph","inlineContent":[{"text":"Lastly, call ","type":"text"},{"type":"codeVoice","code":"Tink.Transactions.updateConsent"},{"text":" method with at least the configuration, the market, the authorization code and a completion handler. It will initialize and return an instance of ","type":"text"},{"type":"codeVoice","code":"UINavigationController"},{"type":"text","text":" with "},{"code":"TinkViewController","type":"codeVoice"},{"type":"text","text":" as a "},{"code":"rootViewController","type":"codeVoice"},{"text":". Present the view controller in a preferable way.","type":"text"}]},{"type":"codeListing","code":["let viewController = Tink.Transactions.updateConsent(configuration: configuration, authorizationCode: authorizationCode, credentialsID: credentialsID) { result in","    \/\/ Handle result","}","present(viewController, animated: true)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"After the user has completed or canceled the flow, the completion handler will be called with a result. On successful authentication the result will contain an instance of "},{"type":"codeVoice","code":"Credentials.ID"},{"text":". If something went wrong the result will contain an error.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["switch result {","    case .success(let credentialsID):","        \/\/ Handle credentials ID after successful connection","    case .failure(let error):","        \/\/ Handle any errors","}"],"type":"codeListing"}],"kind":"content"}],"metadata":{"role":"symbol","roleHeading":"Type Method","title":"updateConsent(configuration:authorizationCode:credentialsID:completion:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateConsent","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"configuration"},{"text":": ","kind":"text"},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink13ConfigurationV"},{"kind":"text","text":", "},{"text":"authorizationCode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AuthorizationCode","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink17AuthorizationCodeV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"credentialsID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Credentials","preciseIdentifier":"s:8TinkLink11CredentialsV"},{"kind":"text","text":"."},{"text":"ID","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV2IDa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Credentials","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8TinkLink11CredentialsV2IDa","text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"TinkError","preciseIdentifier":"s:8TinkLink0A5ErrorV","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UINavigationController","text":"UINavigationController"}],"modules":[{"name":"TinkLink"}],"extendedModule":"TinkLink","symbolKind":"method","externalID":"s:8TinkLink0A0O12TransactionsO13updateConsent13configuration17authorizationCode13credentialsID10completionSo22UINavigationControllerCAA13ConfigurationV_AA013AuthorizationH0VAA10IdentifierVyAA11CredentialsVGys6ResultOyAuA0A5ErrorVGctFZ"},"references":{"doc://TinkLink/documentation/TinkLink/TinkError":{"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/TinkError","role":"symbol","title":"TinkError","abstract":[{"type":"text","text":"An error returned by Tink service requests when something went wrong."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TinkError","kind":"identifier"}],"navigatorTitle":[{"text":"TinkError","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/tinklink\/tinkerror"},"doc://TinkLink/documentation/TinkLink":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink","title":"TinkLink","type":"topic","url":"\/documentation\/tinklink","role":"collection"},"doc://TinkLink/documentation/TinkLink/Tink":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink","url":"\/documentation\/tinklink\/tink","title":"Tink","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tink"}],"abstract":[{"type":"text","text":"The "},{"code":"Tink","type":"codeVoice"},{"type":"text","text":" enum encapsulates a connection to the Tink API."}],"navigatorTitle":[{"kind":"identifier","text":"Tink"}]},"doc://TinkLink/documentation/TinkLink/Credentials":{"url":"\/documentation\/tinklink\/credentials","navigatorTitle":[{"kind":"identifier","text":"Credentials"}],"role":"symbol","abstract":[{"text":"The credentials model represents a userâ€™s connection to a specific provider from where financial data is accessed.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Credentials","kind":"identifier"}],"kind":"symbol","title":"Credentials","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials"},"doc://TinkLink/documentation/TinkLink/Tink/Transactions":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Transactions","url":"\/documentation\/tinklink\/tink\/transactions","title":"Tink.Transactions","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Transactions"}],"abstract":[{"type":"text","text":"Transactions provides standardized transaction data from financial institutions."}],"navigatorTitle":[{"text":"Transactions","kind":"identifier"}]},"doc://TinkLink/documentation/TinkLink/Tink/Transactions/updateConsent(configuration:authorizationCode:credentialsID:completion:)":{"url":"\/documentation\/tinklink\/tink\/transactions\/updateconsent(configuration:authorizationcode:credentialsid:completion:)","role":"symbol","type":"topic","abstract":[{"text":"Initializes Tink Link to run Transactions Update consent flow.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"updateConsent","kind":"identifier"},{"kind":"text","text":"("},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8TinkLink13ConfigurationV","kind":"typeIdentifier","text":"Configuration"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"authorizationCode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink17AuthorizationCodeV","text":"AuthorizationCode"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"credentialsID"},{"kind":"text","text":": "},{"text":"Credentials","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV"},{"kind":"text","text":"."},{"text":"ID","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV2IDa"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"text":"Credentials","preciseIdentifier":"s:8TinkLink11CredentialsV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV2IDa","text":"ID"},{"kind":"text","text":", "},{"text":"TinkError","preciseIdentifier":"s:8TinkLink0A5ErrorV","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UINavigationController","text":"UINavigationController"}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/Transactions\/updateConsent(configuration:authorizationCode:credentialsID:completion:)","kind":"symbol","title":"updateConsent(configuration:authorizationCode:credentialsID:completion:)"},"doc://TinkLink/documentation/TinkLink/Credentials/ID-swift.typealias":{"url":"\/documentation\/tinklink\/credentials\/id-swift.typealias","navigatorTitle":[{"kind":"identifier","text":"ID"}],"role":"symbol","abstract":[{"text":"A unique identifier of a ","type":"text"},{"type":"codeVoice","code":"Credentials"},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ID"}],"kind":"symbol","title":"Credentials.ID","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials\/ID-swift.typealias"},"doc://TinkLink/documentation/TinkLink/AuthorizationCode":{"type":"topic","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/AuthorizationCode","title":"AuthorizationCode","navigatorTitle":[{"text":"AuthorizationCode","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AuthorizationCode","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/tinklink\/authorizationcode","abstract":[{"text":"An authorization code from the Tink backend.","type":"text"}]},"doc://TinkLink/documentation/TinkLink/Configuration":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Configuration","type":"topic","url":"\/documentation\/tinklink\/configuration","title":"Configuration","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Configuration"}],"abstract":[{"text":"Configuration used to set up the Tink Link","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Configuration"}]}}}