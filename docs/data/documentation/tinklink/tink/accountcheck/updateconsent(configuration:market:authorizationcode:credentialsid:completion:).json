{"metadata":{"modules":[{"name":"TinkLink"}],"externalID":"s:8TinkLink0A0O12AccountCheckO13updateConsent13configuration6market17authorizationCode13credentialsID10completionSo22UINavigationControllerCAA13ConfigurationV_AA6MarketVAA013AuthorizationJ0VAA10IdentifierVyAA11CredentialsVGys6ResultOyAxA0A5ErrorVGctFZ","title":"updateConsent(configuration:market:authorizationCode:credentialsID:completion:)","symbolKind":"method","extendedModule":"TinkLink","role":"symbol","roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"updateConsent"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink13ConfigurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"market"},{"kind":"text","text":": "},{"text":"Market","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink6MarketV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"authorizationCode"},{"text":": ","kind":"text"},{"text":"AuthorizationCode","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink17AuthorizationCodeV"},{"kind":"text","text":", "},{"text":"credentialsID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8TinkLink11CredentialsV","kind":"typeIdentifier","text":"Credentials"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8TinkLink11CredentialsV2IDa","text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:8TinkLink11CredentialsV","kind":"typeIdentifier","text":"Credentials"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8TinkLink11CredentialsV2IDa","text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"TinkError","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink0A5ErrorV"},{"text":">) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UINavigationController","preciseIdentifier":"c:objc(cs)UINavigationController"}]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/AccountCheck\/updateConsent(configuration:market:authorizationCode:credentialsID:completion:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"updateConsent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:8TinkLink13ConfigurationV","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Configuration"},{"kind":"text","text":", "},{"text":"market","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Market","preciseIdentifier":"s:8TinkLink6MarketV","text":"Market","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"authorizationCode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AuthorizationCode","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/AuthorizationCode","preciseIdentifier":"s:8TinkLink17AuthorizationCodeV"},{"text":", ","kind":"text"},{"text":"credentialsID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Credentials","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials","preciseIdentifier":"s:8TinkLink11CredentialsV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials\/ID-swift.typealias","preciseIdentifier":"s:8TinkLink11CredentialsV2IDa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials","text":"Credentials","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8TinkLink11CredentialsV2IDa","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials\/ID-swift.typealias","text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/TinkError","text":"TinkError","preciseIdentifier":"s:8TinkLink0A5ErrorV"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"UINavigationController","preciseIdentifier":"c:objc(cs)UINavigationController","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["iOS"]}]},{"parameters":[{"name":"configuration","content":[{"inlineContent":[{"text":"The instance of ","type":"text"},{"type":"codeVoice","code":"Configuration"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"market","content":[{"inlineContent":[{"text":"Market code for which providers should be listed.","type":"text"}],"type":"paragraph"}]},{"name":"authorizationCode","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The authorization code retrieved from the authorization delegate endpoint generated for a concrete permanent user."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ID of the ","type":"text"},{"type":"codeVoice","code":"Credentials.ID"},{"text":" used to extend the consent.","type":"text"}]}],"name":"credentialsID"},{"name":"completion","content":[{"inlineContent":[{"text":"The block to execute when the Update consent flow finished or if an error occurred.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An instance of ","type":"text"},{"code":"UINavigationController","type":"codeVoice"},{"type":"text","text":" with "},{"code":"TinkViewController","type":"codeVoice"},{"text":" as a ","type":"text"},{"type":"codeVoice","code":"rootViewController"},{"text":" ready to run the Update Consent flow.","type":"text"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Here’s one way you can start the Update consent flow via Tink Link:","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"First create a configuration with your client ID, redirect URI and base domain."}],"type":"paragraph"},{"code":["let configuration = Configuration(clientID: <#String#>, redirectURI: <#String#>, baseDomain: <#BaseDomain#>)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Second, retrieve an authorization code from the authorization delegate endpoint generated for a concrete permanent user.","type":"text"}]},{"inlineContent":[{"text":"Third, define a credentials ID which is connected to the consent you want to update.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Lastly, call ","type":"text"},{"type":"codeVoice","code":"Tink.AccountCheck.updateConsent"},{"text":" method with at least the configuration, the market, the authorization code, credentials id and a completion handler. It will initialize and return an instance of ","type":"text"},{"code":"UINavigationController","type":"codeVoice"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"TinkViewController"},{"text":" as a ","type":"text"},{"type":"codeVoice","code":"rootViewController"},{"type":"text","text":". Present the view controller in a preferable way."}],"type":"paragraph"},{"code":["let viewController = Tink.AccountCheck.updateConsent(configuration: configuration, market: market, authorizationCode: authorizationCode, credentialsID: credentialsID) { result in","    \/\/ Handle result","}","present(viewController, animated: true)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"After the user has completed or canceled the flow, the completion handler will be called with a result. On successful authentication the result will contain an instance of "},{"type":"codeVoice","code":"Credentials.ID"},{"type":"text","text":". If something went wrong the result will contain an error."}],"type":"paragraph"},{"syntax":"swift","code":["switch result {","    case .success(let credentialsID):","        \/\/ Handle credentials ID after successful connection","    case .failure(let error):","        \/\/ Handle any errors","}"],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/tinklink\/tink\/accountcheck\/updateconsent(configuration:market:authorizationcode:credentialsid:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Initializes Tink Link to run Account Check Update consent flow.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/TinkLink\/documentation\/TinkLink","doc:\/\/TinkLink\/documentation\/TinkLink\/Tink","doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/AccountCheck"]]},"references":{"doc://TinkLink/documentation/TinkLink/Tink/AccountCheck":{"type":"topic","kind":"symbol","title":"Tink.AccountCheck","url":"\/documentation\/tinklink\/tink\/accountcheck","abstract":[{"text":"Account Check lets you confirm the owner of a bank account by fetching real-time data from banks – from account number, IBAN or routing number to account holder name, and (in some markets) identity data.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AccountCheck"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AccountCheck","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/AccountCheck"},"doc://TinkLink/documentation/TinkLink/Tink":{"url":"\/documentation\/tinklink\/tink","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Tink","kind":"identifier"}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink","abstract":[{"text":"The ","type":"text"},{"code":"Tink","type":"codeVoice"},{"text":" enum encapsulates a connection to the Tink API.","type":"text"}],"title":"Tink","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Tink"}]},"doc://TinkLink/documentation/TinkLink/Tink/AccountCheck/updateConsent(configuration:market:authorizationCode:credentialsID:completion:)":{"type":"topic","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Tink\/AccountCheck\/updateConsent(configuration:market:authorizationCode:credentialsID:completion:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateConsent"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink13ConfigurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"market"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8TinkLink6MarketV","text":"Market","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"authorizationCode"},{"kind":"text","text":": "},{"text":"AuthorizationCode","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink17AuthorizationCodeV"},{"text":", ","kind":"text"},{"text":"credentialsID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Credentials","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8TinkLink11CredentialsV2IDa","kind":"typeIdentifier","text":"ID"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Credentials","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV"},{"text":".","kind":"text"},{"text":"ID","kind":"typeIdentifier","preciseIdentifier":"s:8TinkLink11CredentialsV2IDa"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:8TinkLink0A5ErrorV","text":"TinkError","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UINavigationController","text":"UINavigationController"}],"title":"updateConsent(configuration:market:authorizationCode:credentialsID:completion:)","abstract":[{"type":"text","text":"Initializes Tink Link to run Account Check Update consent flow."}],"url":"\/documentation\/tinklink\/tink\/accountcheck\/updateconsent(configuration:market:authorizationcode:credentialsid:completion:)"},"doc://TinkLink/documentation/TinkLink/AuthorizationCode":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthorizationCode","kind":"identifier"}],"navigatorTitle":[{"text":"AuthorizationCode","kind":"identifier"}],"kind":"symbol","title":"AuthorizationCode","abstract":[{"type":"text","text":"An authorization code from the Tink backend."}],"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/AuthorizationCode","url":"\/documentation\/tinklink\/authorizationcode"},"doc://TinkLink/documentation/TinkLink/Credentials/ID-swift.typealias":{"navigatorTitle":[{"text":"ID","kind":"identifier"}],"url":"\/documentation\/tinklink\/credentials\/id-swift.typealias","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials\/ID-swift.typealias","role":"symbol","type":"topic","title":"Credentials.ID","abstract":[{"type":"text","text":"A unique identifier of a "},{"type":"codeVoice","code":"Credentials"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ID"}],"kind":"symbol"},"doc://TinkLink/documentation/TinkLink/TinkError":{"title":"TinkError","abstract":[{"type":"text","text":"An error returned by Tink service requests when something went wrong."}],"kind":"symbol","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/TinkError","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TinkError"}],"navigatorTitle":[{"text":"TinkError","kind":"identifier"}],"type":"topic","url":"\/documentation\/tinklink\/tinkerror"},"doc://TinkLink/documentation/TinkLink/Credentials":{"navigatorTitle":[{"text":"Credentials","kind":"identifier"}],"url":"\/documentation\/tinklink\/credentials","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Credentials","role":"symbol","type":"topic","title":"Credentials","abstract":[{"type":"text","text":"The credentials model represents a user’s connection to a specific provider from where financial data is accessed."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Credentials","kind":"identifier"}],"kind":"symbol"},"doc://TinkLink/documentation/TinkLink/Market":{"identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Market","title":"Market","abstract":[{"text":"Represents a market by a two-letter country code.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/tinklink\/market","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Market","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Market"}]},"doc://TinkLink/documentation/TinkLink":{"kind":"symbol","title":"TinkLink","type":"topic","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink","url":"\/documentation\/tinklink","role":"collection","abstract":[]},"doc://TinkLink/documentation/TinkLink/Configuration":{"title":"Configuration","abstract":[{"type":"text","text":"Configuration used to set up the Tink Link"}],"kind":"symbol","identifier":"doc:\/\/TinkLink\/documentation\/TinkLink\/Configuration","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"navigatorTitle":[{"text":"Configuration","kind":"identifier"}],"type":"topic","url":"\/documentation\/tinklink\/configuration"}}}